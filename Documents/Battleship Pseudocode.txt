//****************************************//
//TO-DO
	-Rotate ship
	-Ship placement gamestate
	-Switch player
	-Victory Condition
	-Restart
	
//****************************************//
//Grab ship & Snap ship to grid
if (ship[k].boundingbox intersects mouse.boundingbox & mouseleftbutton = pressed)
	ship[k].position = new vector2(mouse.pos.X -25, mouse.pos.Y -25)
	holding_ship = true
else if (mouse.boundingbox intersects tile[i,j].boundingbox & mouseleftbutton = released & holding_ship = true)
	ship[k].position = new vector2(tile[i,j].pos.X, tile[i,j].pos.Y)
	holding_ship = false
	
	
	
	
if (mouse_state.LeftButton == ButtonState.Pressed)
{
   for (int k = 0; k < ships.GetLength(0) && holding_ship = false; k++)
   {
       if (ship_hitbox.Intersects(mouse_box))
       {
           holding_ship = true;
           temp_ship = ships[k];
       }
   }
   temp_ship.position.X = mouse_state.X - temp_ship.hitbox.Width / 2;
   temp_ship.position.Y = mouse_state.Y - temp_ship.hitbox.Height / 2;
}

//****************************************//
//Ship is inside grid
grid_hitbox = new Rectangle(posX, posY, Width, Height)
if (!grid_hitbox.Contains(ship_hitbox)
{
	Kod för vad som händer om skeppet är utanför rutnätet
}


//****************************************//
//Boolean contains_ship
if (ship[k].boundingbox intersect tile[i,j].boundingbox)
	contains_ship = true
else
	contains_ship = false


//****************************************//
//Boolean is_hit
if (mouse.boundingbox intersects tile[i,j].boundingbox & mousebutton = pressed)
	if (is_hit = true)
		"You've already fired there"
	else
		is_hit = true


//****************************************//
//Update
For each tile in grid
	if(is_hit = true)
		if(contains_ship = true)
			[Player health or ship health] -1


//****************************************//
//Draw
For each tile in grid
	if(is_hit = true)
		if(contains_ship = true)
			draw explosion
		else
			draw miss
	else
		draw nothing